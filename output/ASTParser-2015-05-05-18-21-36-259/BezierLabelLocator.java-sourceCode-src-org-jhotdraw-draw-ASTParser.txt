/*
 * @ # Poly Line Decoration Locator 1 0 3 Februar 2004
 *
 * Copyright 1996-2006 by the original authors of Jhotdraw
 * and all its contributors Jhotdraw org 
 * All rights reserved 
 *
 * This software the confidential and proprietary information of
 * Jhotdraw org Confidential Information You shall not disclose
 * such Confidential Information and shall use it only accordance
 * with the terms of the license agreement you entered into with
 * Jhotdraw org 
 */ // Get point the path the next point the path // South East // North East // South East // North East // South West // North West /*
 percentage = relative Position * 100 
 
 segment // relative segment
 Point2 seg Point // relative Point2 the segment
 Points = owner get Point Count 
 Point2 Points = owner get Points 
 
 if Points < 2 new Point2 0 0 
 
 switch percentage {
 case 0 
 segment = 0 
 seg Point = owner get Start Point 
 break 
 case 100 
 segment = owner get Point Count - 2 
 seg Point = owner get End Point 
 break 
 default 
 total Length = 0d 
 seg Length = new Points - 1 
 for i=1 < Points i++ {
 seg Length i-1 = Geom length Points i-1 Points i-1 Points Points 
 total Length += seg Length i-1 
 }
 relative Progress = percentage * total Length / 101d 
 segment = 0 
 seg Min = 0d 
 for segment=0 segment < seg Length length - 1 segment++ {
 if seg Min + seg Length segment > relative Progress break 
 seg Min += seg Length segment 
 }
 
 // Compute the relative Point2 the line
 seg Point = new Point2 
 relative Progress -= seg Min 
 seg Point = Points segment * seg Length segment - relative Progress + Points segment + 1 * relative Progress / seg Length segment + 5 
 seg Point = Points segment * seg Length segment - relative Progress + Points segment + 1 * relative Progress / seg Length segment + 5 
 
 break 
 }
 
 Dimension2 label Dim = label get Preferred Size 
 
 Line2 line = new Line2 Points segment Points segment Points segment + 1 Points segment + 1 
 dir = Math atan2 Points segment + 1 - Points segment Points segment + 1 - Points segment 
 alpha = dir + angle 
 
 Point2 = new Point2 
 seg Point + distance * Math cos alpha 
 seg Point + distance * Math sin alpha 
 
 
 if >= seg Point {
 if >= seg Point {
 // South East
 new Point2 
 } else {
 // North East
 new Point2 - label Dim height 
 }
 } else {
 if >= seg Point {
 // South West
 new Point2 - label Dim width 
 } else {
 // North West
 new Point2 - label Dim width - label Dim height 
 }
 }*/ 